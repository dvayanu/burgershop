buildscript {
    repositories {
        mavenCentral()
        maven { url "https://maven.eveoh.nl/content/repositories/releases" }
    }

    dependencies {
        classpath "nl.eveoh:gradle-aspectj:1.4"
    }
}

repositories {
    maven { url "http://nexus.anotheria.net/nexus/content/groups/public" }
}

project.ext {
    aspectjVersion = '1.7.4'
}

configurations {
    moskitoWebUI
}

apply plugin: 'war'
apply plugin: 'maven'
apply plugin: 'aspectj'

group = 'de.zaunberg'
version = '1.0-SNAPSHOT'

moskitoVersion = '2.4.0'
moskitoCentralVersion = '1.1.0'

description = "Burgershop Webapp"

dependencies {
    compile group: 'org.springframework', name: 'spring-web', version: '3.2.4.RELEASE'
    compile group: 'org.springframework', name: 'spring-webmvc', version: '3.2.4.RELEASE'

    compile group: 'net.anotheria', name: 'ano-tags', version: '2.1.0'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.5'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.0.13'

    compile group: 'net.anotheria', name: 'moskito-core', version: moskitoVersion
    compile group: 'net.anotheria', name: 'moskito-aop', version: moskitoVersion
    compile group: 'net.anotheria', name: 'moskito-web', version: moskitoVersion
    compile group: 'net.anotheria', name: 'moskito-webui-jersey', version: moskitoVersion

    // For some reason Gradle don't import jersey-core with moskito-webui-jersey,
    //temporary added dependency on jersey-core
    compile group: 'com.sun.jersey', name : 'jersey-core', version: '1.17.1'

    compile group: 'org.moskito', name: 'moskito-central-embedded-connector', version: moskitoCentralVersion
    compile group: 'org.moskito', name: 'moskito-central-storages', version: moskitoCentralVersion

    testCompile group: 'junit', name: 'junit', version: '4.5'
    providedCompile group: 'javax.servlet', name: 'servlet-api', version: '2.5'
    moskitoWebUI group: 'net.anotheria', name: 'moskito-webui', version: moskitoVersion
    aspectpath group: 'net.anotheria', name: 'moskito-aop', version: moskitoVersion
}

task unpackWebUI(type: Copy) {
    from {
        configurations.moskitoWebUI.collect { zipTree(it) }
    }
    into "$buildDir/api/"

    includeEmptyDirs = false
    include('img/**', 'js/**', '**/*.jsp', 'css/**')
}

war.doFirst {
    tasks.unpackWebUI.execute()
    from "$buildDir/api"
}

war {
    archiveName = "burgershop.war"
}